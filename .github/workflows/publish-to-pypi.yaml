name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false
        poetry install
    
    - name: Check and Compare Versions
      id: version_check
      run: |
        # Fetch the latest tags
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/kevinrawal/type-fastapi.git
        git fetch --tags
        PREV_VERSION=$(git describe --tags --abbrev=0 || echo "0.0.0")
        echo "Previous Version: $PREV_VERSION"

        # Get the current version from pyproject.toml
        CURRENT_VERSION=$(poetry version -s)
        echo "Current Version: $CURRENT_VERSION"

        # Compare the versions
        if [ "$CURRENT_VERSION" = "$PREV_VERSION" ]; then
          echo "Version has not changed. Skipping further steps."
          echo "::set-output name=should_skip::true"
          exit 0
        else
          echo "Version has changed. Proceeding with build and publish."
          echo "::set-output name=should_skip::false"
        fi

    - name: Build Package
      if: steps.version_check.outputs.should_skip != 'true'
      run: poetry build

    - name: Publish to PyPI
      if: steps.version_check.outputs.should_skip != 'true'
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        set -e
        poetry config pypi-token.pypi $PYPI_TOKEN
        poetry publish
    
    - name: Create and Push Git Tag
      if: steps.version_check.outputs.should_skip != 'true'
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/kevinrawal/type-fastapi.git
        CURRENT_VERSION=$(poetry version -s)
        git tag $CURRENT_VERSION
        git push origin $CURRENT_VERSION
